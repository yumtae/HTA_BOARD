<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapper 인터페이스가 있는 곳의 패키지명과 이름을 namespace로 설정합니다. -->
<mapper namespace="com.naver.myboard2.mybatis.mapper.BoardMapper">

	<select id="getListCount" resultType="int">
		select count(*) from board3
	</select>
	
	<!-- 문법오류
		where rownum <= #{end}
		
		해결법
			① where rownum &lt;= #{end}
			② where rownum <![CDATA[ >= ]]> #{end}
			
		설명
			① HTML 문서는 '<', '>'와 같은 마크업 문자들을 파싱해서 읽어들이는 구조입니다.
				그래서 마크업 문자들을 작다(<), 크다(>)로 사용하기 위해서
				'&lt;', '&gt;' 등의 escape 문자열(escape character)을 이용해야 합니다.
				
				&lt; => <
				&gt; => >
				
			② CDATA(Character DATA) - XML 파서가 분석하지 않는 문자 데이터를 의미합니다.
				사용하는 방법은 <![CDATA[ 와 ]]> 사이에 문자들을 넣으면 됩니다.
	 -->
	<select id="getBoardList" resultType="board">
		select *
		from (select rownum rnum, j.*
				from(select * from board3
					order by BOARD_RE_REF desc,
					BOARD_RE_SEQ asc
					)j
				where rownum &lt;= #{end}
			)
		where rnum between #{start} and #{end}
	</select>
	
	<!-- 
		1.jdbcType = VARCHAR : 첨부 파일을 추가하지 않은 경우 에러 처리해 줍니다.
								해당 필드가 null인 경우 jdbcType = VARCHAR로 처리하면 null로 설정됩니다.
								
		2.① insert 전에(order="BEFORE")
		  	 조회(select nvl(max(BOARD_NUM),0)+1 from board)합니다.
		  ② 조회한 값을 keyProperty="BOARD_NUM"에서 설정한 대로
		  	"BOARD_NUM" 프로퍼티에 저장합니다.
		  	(public void setBOARD_NUM(int BOARD_NUM))
		  ③ insert문의 #{BOARD_NUM}은 지금 구한 값을 BoardBean에서 가져옵니다.
		  (public String getBOARD_NUM() {return BOARD_NUM;})
			
	 -->
	<insert id="insertBoard">
		<selectKey resultType="int" order="BEFORE" keyProperty="BOARD_NUM">
			select nvl(max(BOARD_NUM),0)+1 from board3
		</selectKey>
		insert into board3
		(BOARD_NUM,
		 BOARD_NAME, BOARD_PASS, BOARD_SUBJECT,
		 BOARD_CONTENT, BOARD_FILE, BOARD_ORIGINAL,
		 BOARD_RE_REF,
		 BOARD_RE_LEV, BOARD_RE_SEQ, BOARD_READCOUNT,
		 BOARD_DATE)
		 values
		(#{BOARD_NUM},
		 #{BOARD_NAME}, #{BOARD_PASS}, #{BOARD_SUBJECT},
		 #{BOARD_CONTENT}, #{BOARD_FILE},#{BOARD_ORIGINAL},
		 #{BOARD_NUM},
		 #{BOARD_RE_LEV}, #{BOARD_RE_SEQ}, #{BOARD_READCOUNT},
		 sysdate)
	</insert>
	
	<update id="setReadCountUpdate">
		update board3
		set		BOARD_READCOUNT = BOARD_READCOUNT + 1
		where	BOARD_NUM = #{number}
	</update>
	
	<select id="getDetail" resultType="board">
		select * from board3
		where BOARD_NUM = #{number}
	</select>
	
	<!-- map은 java.util.Map의 별칭입니다. -->
	<select id="isBoardWriter"  resultType="board">
		select * from board3
		where BOARD_NUM = #{num}
		and BOARD_PASS = #{pass}
	</select>
	
	<update id="boardModify">
		update board3
		set
				BOARD_SUBJECT = #{BOARD_SUBJECT},
				BOARD_CONTENT = #{BOARD_CONTENT},
				BOARD_FILE = #{BOARD_FILE, jdbcType=VARCHAR},
				BOARD_ORIGINAL = #{BOARD_ORIGINAL, jdbcType=VARCHAR}
		where	BOARD_NUM = #{BOARD_NUM}
	</update>
	
	<update id="boardReplyUpdate">
		update board3
		set
				BOARD_RE_SEQ = BOARD_RE_SEQ + 1
		where 	BOARD_RE_REF = #{BOARD_RE_REF}
		and		BOARD_RE_SEQ > #{BOARD_RE_SEQ}
	</update>
	
	<!-- BOARD_FILE, BOARD_ORIGINAL 필드 없어요 -->
	<insert id="boardReply">
		<selectKey resultType="int" order="BEFORE" keyProperty="BOARD_NUM">
			select nvl(max(BOARD_NUM),0)+1 from board3
		</selectKey>
		insert into board3
			(BOARD_NUM, BOARD_NAME, BOARD_PASS, BOARD_SUBJECT,
			 BOARD_CONTENT, BOARD_RE_REF, BOARD_RE_LEV, BOARD_RE_SEQ,
			 BOARD_READCOUNT, BOARD_DATE)
		values
			(#{BOARD_NUM}, #{BOARD_NAME}, #{BOARD_PASS}, #{BOARD_SUBJECT},
			 #{BOARD_CONTENT}, #{BOARD_RE_REF}, #{BOARD_RE_LEV}, #{BOARD_RE_SEQ},
			 #{BOARD_READCOUNT}, sysdate)
	</insert>
	
	<delete id="boardDelete">
		delete from board3
		where 	BOARD_RE_REF = #{BOARD_RE_REF}
		and		BOARD_RE_LEV <![CDATA[ >= ]]> #{BOARD_RE_LEV}
		and		BOARD_RE_SEQ <![CDATA[ >= ]]> #{BOARD_RE_SEQ}
		and 	BOARD_RE_SEQ <![CDATA[ <= ]]> (
												nvl((select min(BOARD_RE_SEQ)-1
												from board3
												where 	BOARD_RE_REF = #{BOARD_RE_REF}
												and 	BOARD_RE_LEV = #{BOARD_RE_LEV}
												and		BOARD_RE_SEQ <![CDATA[ > ]]> #{BOARD_RE_SEQ}),
												(select max(BOARD_RE_SEQ)
												from board3
												where BOARD_RE_REF = #{BOARD_RE_REF}))
												)
	</delete>
	
	
	<select id="getDeleteFileList">
		select board_file from delete_file
	</select>
	
	<delete id="deleteFileList" >
		delete delete_file 
		where board_file = #{file_name}
	
	</delete>
	
	
</mapper>